local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "GAG",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "GAG",
   LoadingSubtitle = "by Keng",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = "fack hub", -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("SummerHarvest", "rewind")

local Section = Tab:CreateSection("SummerHarvest")

local autoHarvestEnabled = false

local Toggle = Tab:CreateToggle({
   Name = "Auto SummerHarvest",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      autoHarvestEnabled = Value

      if autoHarvestEnabled then
         task.spawn(function()
            while autoHarvestEnabled do
               local localplayer = game.Players.LocalPlayer
               local character = localplayer.Character or localplayer.CharacterAdded:Wait()
               local hrp = character:WaitForChild("HumanoidRootPart")

               local firedCount = 0
               local maxFires = 100
               local teleported = false

               for _, farm in ipairs(workspace.Farm:GetChildren()) do
                  if not autoHarvestEnabled or firedCount >= maxFires then break end

                  local important = farm:FindFirstChild("Important")
                  if important then
                     local data = important:FindFirstChild("Data")
                     if data and data:FindFirstChild("Owner") and data.Owner.Value == localplayer.Name then
                        local plants = important:FindFirstChild("Plants_Physical")
                        if plants then
                           for _, plant in ipairs(plants:GetChildren()) do
                              if not autoHarvestEnabled or firedCount >= maxFires then break end

                              local fruits = plant:FindFirstChild("Fruits")
                              if fruits then
                                 local tomato = fruits:FindFirstChild("Tomato")
                                 if tomato then
                                    if not teleported then
                                       local targetPart = tomato:IsA("BasePart") and tomato or tomato:FindFirstChildWhichIsA("BasePart")
                                       if targetPart then
                                          hrp.CFrame = targetPart.CFrame + Vector3.new(3, 0, 0)
                                          task.wait(0.3)
                                          teleported = true
                                       end
                                    end

                                    for _, item in ipairs(tomato:GetDescendants()) do
                                       if not autoHarvestEnabled or firedCount >= maxFires then break end

                                       if item:IsA("ProximityPrompt") then
                                          fireproximityprompt(item)
                                          firedCount += 1
                                       end
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
               end

               task.wait()
               game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("SummerHarvestRemoteEvent"):FireServer("SubmitAllPlants")
            end
         end)
      end
   end,
})

local Button = Tab:CreateButton({
   Name = "show SummerHarvest value",
   Callback = function()
    local text = workspace.SummerHarvestEvent.RewardSign:GetChildren()[2].SurfaceGui.PointTextLabel.Text

-- สร้าง ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TempTextDisplay"
screenGui.ResetOnSpawn = false
screenGui.Parent = game:GetService("CoreGui")

-- สร้าง TextLabel
local label = Instance.new("TextLabel")
label.Size = UDim2.new(0.6, 0, 0.1, 0)
label.Position = UDim2.new(0.2, 0, 0.45, 0)
label.AnchorPoint = Vector2.new(0, 0)
label.BackgroundTransparency = 0.3
label.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.TextScaled = true
label.Font = Enum.Font.SourceSansBold
label.Text = text
label.Parent = screenGui

-- รอ 5 วินาทีแล้วลบ
task.delay(5, function()
    screenGui:Destroy()
end)

   end,
})

game:GetService("CoreGui")["Rayfield-Old"]:Destroy()
